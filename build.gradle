buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
	}
}

plugins {
    id "com.wynprice.cursemaven" version "2.1.1"
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

archivesBaseName = project.archives_base_name
version = project.mod_version
group = "${project.maven_group}.${project.mod_id}"

minecraft {
	mappings channel: "${project.mapping_channel}", version: "${project.mapping_version}"
	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

	runs {
		client {
			properties 'forge.logging.console.level': 'debug'
			properties 'fml.earlyprogresswindow': 'false'
			properties 'mixin.env.disableRefMap': 'true'
			workingDirectory project.file('run')
			arg "-mixin.config=charm.mixins.json"
			source sourceSets.main
			jvmArgs "-Xmx1500M"
		}

		server {
			properties 'forge.logging.console.level': 'debug'
			properties 'mixin.env.disableRefMap': 'true'
			workingDirectory project.file('run')
			arg "-mixin.config=charm.mixins.json"
			source sourceSets.main
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

	// third party
	compile fg.deobf("vazkii.quark:Quark:${project.quark_version}")
	compile fg.deobf("vazkii.autoreglib:AutoRegLib:${project.arl_version}")
	compileOnly fg.deobf("mezz.jei:jei-${project.minecraft_version}:${project.jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:jei-${project.minecraft_version}:${project.jei_version}")

	// for testing apotheosis
    //compile fg.deobf("curse.maven:apotheosis:3095843")
	//compile fg.deobf("curse.maven:placebo:3092113")
}

repositories {
	maven {
		// for AutoRegLib
		name "blamejared"
		url "http://maven.blamejared.com/"
	}
	maven {
		// for JEI
		name "progwml6"
		url "http://dvs1.progwml6.com/files/maven"
	}
	maven {
		// for Mappings
		name "gigaherz"
		url "http://dogforce-games.com/maven/"
	}
	flatDir {
		// for including local jar files
		dirs "libs"
	}
}

mixin {
	add sourceSets.main, 'charm.mixins.refmap.json'
}

processResources {
	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'META-INF/mods.toml'

		// replace version and mcversion
		expand 'mod_version': project.version
	}

	// copy everything else, thats not the mods.toml
	from(sourceSets.main.resources.srcDirs) {
		exclude 'META-INF/mods.toml', '**/psd/**'
	}
}

// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
    archiveName = "${project.archives_base_name}-${project.mod_version}.${extension}"

	manifest {
        attributes([
            "Specification-Title": "${project.mod_id}",
            "Specification-Vendor": "svenhjol",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${project.mod_id}",
            "Implementation-Version": "${project.mod_version}",
            "Implementation-Vendor": "svenhjol",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "charm.mixins.json"
        ])
    }

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
    exclude "**/unused"
}
